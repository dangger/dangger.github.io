<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>dangge&#39;s blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.dangge.moe/"/>
  <updated>2017-03-27T14:12:36.000Z</updated>
  <id>https://blog.dangge.moe/</id>
  
  <author>
    <name>dangge</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>什么是成熟？</title>
    <link href="https://blog.dangge.moe/2017/03/27/index.html"/>
    <id>https://blog.dangge.moe/2017/03/27/index.html</id>
    <published>2017-03-27T08:14:47.000Z</published>
    <updated>2017-03-27T14:12:36.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本文极度啰嗦且充满个人负能量，为了不浪费你的时间请赶紧ctrl-w。"><a href="#本文极度啰嗦且充满个人负能量，为了不浪费你的时间请赶紧ctrl-w。" class="headerlink" title="本文极度啰嗦且充满个人负能量，为了不浪费你的时间请赶紧ctrl+w。"></a>本文极度啰嗦且充满个人负能量，为了不浪费你的时间请赶紧ctrl+w。</h1><a id="more"></a>
<p>今天是2017年3月27日，难得郑州风和日丽 AQI 低于 100 的一天。<br>翘掉了一个没什么兴趣的上机课，舍友扎堆在农药开黑，我一像不喜欢这种不骂人就没法玩的集体活动，于是打算整理下自己的一点心情。<br>不知不觉来到郑州这座城市已经三年了，然而没什么实感，还处于出门坐个公交车还得掏手机查半天的乡下人刚进城状态。<br>象牙塔中的生活安稳而有点无趣，普通学校的课程也没有传闻中清北复交那样的变态，基本上课随便听听，课下看看书就能保证一个还过得去的成绩。<br>安逸的环境使人懒散，于是我自己也忘记了怎么开始玩 Minecraft 的。然后怎么认识 <a href="https://blog.phoenixlzx.com/" target="_blank" rel="external">凤凰君</a> 并加入 <a href="https://nyaa.cat/" target="_blank" rel="external">喵窝</a> 的记忆也比较模糊了，总之就非常投入地玩了一年的 Minecraft 。留下了不少非常赞的回忆，而且通过喵窝这个平台也认识了一大群（非常多）的菊苣，虽然平时只是闲聊，但是当时作为一个初出茅庐的大学新生，从他们身上学到了非常非常多的东西，所以虽然有点后悔，但是大一的生活并没有什么遗憾。<br>大二的时候，因为自己实在是太闲了（和高三那地狱般的模式比起来），还是经过凤凰君的介绍，稀里糊涂的加入了 KNA 。然后又认识了一大群更让人 orz 的菊苣。比较意外的是发现 <a href="https://plus.google.com/+%E4%BA%94%E6%9C%88%E6%A0%9E" target="_blank" rel="external">腾壕</a> 居然也在群里，所以当时我的心情大概就像 <a href="https://blog.dangge.moe/2015/04/13/index.html">这篇文章</a> 一样，惶恐（是的，就是惶恐）中带点激动。之后就跟着少将，迷子，美羽，丫Kz 还有不计其数的菊苣一起开始做新番字幕了。感谢他们的耐心教导，我接触到了 Tower, Slack 这样的协作平台，然后还用了 N 久的 BTsync（现在这玩意应该叫做 resilio sync 了）来做项目同步，虽然并没有增长多少日语水平，但是起码积累了不少团队协作的经验，同时这些菊苣也帮了我非常多的忙，虽然现在组因为一些原因不再活动了，但是我还是从心底感激他们。<br>安逸的时间总是过得很快，犹如白驹过隙，突然我就大三了。身边的同学好像也都突然摆脱掉了高中生的那份稚气，开始一点一点改变了，然而我突然失去了对一切的兴趣，大三的上学期一直在玩各种各样的游戏，看各种各样的动画，代码基本一行都不想写，能抄别人的就复制粘贴，然而看再多的新番旧番也改变不了什么，更不能填补我心中的那份空虚和迷茫。    </p>
<blockquote>
<p>“人类是一种放任自由就会堕落的生物。”</p>
</blockquote>
<p>浑浑噩噩到了大三下学期，过了一个浑浑噩噩的新年之后，我突然发现舍友很少回来了，经常夜不归宿，这时候我才意识到一件事：<br>“原来大学生活快结束了啊。”<br>然后回头看看自己的 Github 和硬盘，除了一堆垃圾之外就是动画啊什么的库存，还有一些没什么技术含量的字幕文件。<br>“这就是我大学三年的全部了?”<br>非常意外，当我意识到这件事的时候，心里一丝波澜都没有，可能是混沌太久脑子也坏了吧。<br>过了新年，经常逛的 V2EX 里，春季招聘贴也慢慢的多了起来，里面的”18级实习生””内推”等关键词也突然刺痛了眼睛。<br>我真的，有资格去从事这一行吗。。。<br>看了好久，给腾讯和新浪的两个帖子中所提到的邮箱发去了邮件，前者在凌晨一点多回复我已经内推，后者则杳无音信。然后突然就慌了起来，像每个考试前才意识到自己什么都不太会的普通人一样，慌慌张张的开始预习一些东西。然后像一个普通人一样慢慢懒惰，失去兴趣，然后突然收到了一条短信：<br>腾讯邀请您参加 XXXXXXXXXX 模拟笔试。<br>当时的心情很难描述，是自暴自弃了？还是怎样的心情？我文笔拙劣，无法表达。<br>结果一目了然，甚至连一个我以前觉得技术力很不怎样的舍友都不如吧。<br>大概停留在人生低谷的我浑浑噩噩的翻着网页，看别人讨论收到了几个 offer ，看别人讨论研究生复试如何如何等等。<br>然后打开了<a href="https://bgm.tv/" target="_blank" rel="external">bangumi</a>，在漫无目的的点击中突然看到了这个：<br><img src="https://ws4.sinaimg.cn/large/61bd4eabgy1fe1ilkaik1j20qw0k5499.jpg" alt=""><br>哦，原来是脏翅膀啊。久仰大名，听说剧情挺不错的，闲着也是闲着，去下个玩玩吧。<br>一开始只是为了逃避现实，谁知道我近乎着迷似的，三天就推完了这个游戏。<br>是的，这篇文章其实是我想谈一下这个 galgame ，如果你看到这里还没关掉网页，那我只能说，<strong>下方剧透</strong>。<br>说实话我不算一个 galgame 老手，玩过的第一款 galgame 似乎是调色板的<a href="https://bgm.tv/subject/3306" target="_blank" rel="external">ましろ色シンフォニー</a>,当时我大概还是个二逼少年，还在贴吧搜 galgame 什么好玩，还好当时的贴吧并不喜欢给新人推荐什么十二神器这样的东西，于是我的入门作是纯白这样的非常纯爱的校园恋爱故事。之后玩的第二款游戏就有点厉害了，<a href="https://bgm.tv/subject/1126" target="_blank" rel="external">Ever17</a> , 作为一个还没怎么接触过日本 ADV 游戏的高考完在家没事干少年，第一次看到 E17这样。。。峰回路转的剧情向巅峰作品，大概就像我看完了妖精的尾巴之后百度搜索妖精关键词，然后自动补全了妖精的旋律一样吧。<br>总之当时我非常震撼于 E17 的剧情，以至于安利给了不少人。当然，我觉得他们大概都没有耐心看完前面非常非常长的铺垫，直接看了剧透，所以应该没我这样震撼的感受吧。<br>之后进入象牙塔，沉迷 MC 前面都说过了，不过期间还是玩了 nekopara 这样的小品游戏的。所以看到这里如果你还没有关掉网页，你应该已经发现了：我其实没玩过几款 galgame，估计连李先生一个月玩的数量都比不上吧。而且玩的要么是日常废萌，要么是非常扯淡的科幻剧情向，和现实生活基本没一丁点关系。<br>就在这样的一个背景下，我打开了秽翼的尤斯蒂娅。<br>游戏一开始，看了五分钟我意识到男主是生存在社会最底层的一个杀手，然后突然就一堆娼妇出现，所以大概真的是生活的比较惨淡吧，这种游戏有个毛代入感啊，继续看故事好了。<br>然后我就看了大概几个小时的底层小人物挣扎群像剧，一开始我只是想逃避一下现实，结果就被秽翼所营造的庞大而完善世界观给吸引了。<br>序章中的男主过得还算日常，平时和一群相熟的娼妇打屁开玩笑，还有自己赎身的一个妹子没事干就来倒贴，更牛逼的是自己还跟社会底层的黑社会组织老大有过命的交情，怎么想都已经算是混的非常不错了。有房有钱有基友，就差一个妹子了，不是吗？<br>然后天上就掉下来一个妹子，而且居然还是个长有双翼的（羽化病人），虽然在这个世界里并没有人把长翅膀的当做天使，而是当做可怕的传染病患者。然而既然是女主自然就得不寻常，不但男主没一刀捅了她，而且就算被别人一刀捅了照样能原地复活，成功勾起了基本无欲无求的男主的兴趣，然后故事就跳章了。  </p>
<h3 id="誰がために剣を"><a href="#誰がために剣を" class="headerlink" title="誰がために剣を"></a>誰がために剣を</h3><p>第一章是讲菲奥娜的，一个帝国贵族后代，老爹是前任财务什么什么官，一辈子两袖清风，反正家族史好的不行，女儿自然也是刚正不阿，在(自认为)正义的道路上行走着。然而剧情要发展，编剧就要搞事，这么个自认为正义味方的人突然发现到处杀人的疯狂杀人魔是自己的亲哥哥，而且自己所认为保护的羽化病人居然都被送到实验室杀掉了，巨大的反差让这个人迷茫了，然后男主自然一顿攻略，然后哥哥适当送上助攻:</p>
<blockquote>
<p>“Fione，你要成为役剑者，而非被剑役之人，不要为家族所束缚，成为坚强的人。”  </p>
</blockquote>
<p>然后女主就意识到了自己一直都被家族所困，被正义所困。然而这些都只是别人定下的东西，自己所走的路终归要自己决定，更何况，什么才是正义？</p>
<h3 id="少女人形"><a href="#少女人形" class="headerlink" title="少女人形"></a>少女人形</h3><p>菲奥娜线结束后，突然这个人就不见了，游戏进入到第二章，男主拜把子兄弟所统领的组织和另一个组织的冲突越来越激烈，故事的主调开始变得灰暗。<br>然后之前男主赎身的一个大胸娼妇（医生）爱丽丝（日本人为什么要写 Eris 这样奇怪的名字）就突然开始粘着男主了，虽然之前也很黏就是了。但是男主一直像个性冷淡一样拒绝她，让妹子非常摸不着头脑，就想着办法去吸引男主注意力，甚至不惜投敌来让男主多看她几眼。<br>但是这章的男主突然就嘴炮能力 min 了，不巧两个组织还开打了，而且男主这边一直被压着打，虽然头领说他自有妙计，但是起码到最后翻盘都是被压着打。<br>然而实际上呢，男主其实是爱丽丝的杀父仇人，根据剧情所说似乎也是因为他杀了爱丽丝父母才导致她被卖到牢狱来，所以男主虽然为爱丽丝赎身，但是并不愿意接受她。<br>对爱丽丝来说，所有人都不知道的是她从小被父母当做人偶一样养，其实这点我觉得能看懂中文的应该都有所感受。中式教育基本就是父母在按照自己的意愿来培养一个父母心目中的人偶，不过幸运的是大部分人在独立之后就摆脱了父母的束缚，走上了自己的路。但是爱丽丝没有，她从故事一开始就是一个听话的人偶，主人下了命令就去执行，没有命令就不知道自己要干嘛。<br>这章的两个选项，你可以选择成为爱丽丝的主人，然后她一辈子都听你的话，像一个人偶一样。或者你毅然撒手，让爱丽丝自己去探求自己的道路。老实说我真的不太忍心选第二个。。。真是太惨了，虽然牢狱里比爱丽丝惨的应该比比皆是，但是比起这游戏其他人来说，爱丽丝已经算是比较惨的了。。。    </p>
<blockquote>
<p>每个人都有伤痛的过往，而你永远都不是那个唯一，也绝对不会是那其中之最。没有人可以拯救自己，只有自己才能拯救自己。</p>
</blockquote>
<p>这章因为还要搞政治斗争和两个帮派争斗，所以爱丽丝的故事其实并不是特别的显眼。所以你选了第二个选项后的剧情我觉得挺不合逻辑，反正就是爱丽丝自己去追寻生存的意义了。<br>所以说，什么才是自由？  </p>
<h3 id="孤高の聖者"><a href="#孤高の聖者" class="headerlink" title="孤高の聖者"></a>孤高の聖者</h3><p>爱丽丝线结束后是圣女线，这时候的 Eustia 是个人都能看出不同寻常了，但是为了讲完故事她还得再做配角一段时间。<br>这章是讲靠祈祷而使故事所在的都市悬浮起来的圣女的故事。秽翼一开始的介绍里我还以为这位是超大 Boss，没想到被编剧摆了一道。所谓的圣女靠祈祷使城市悬浮起来根本就是假的，是当权者编出来稳定人心的，所以这个圣女表面上非常风光，万人敬仰，但是其实就是一个如果地震了就要从悬崖跳下去来安抚民心的工具。<br>但是圣女虽然心知肚明自己并没什么卵用，但是因为信仰精纯，所以还是能听到天使一些话，然后男主就靠这个机会接触到了上层人士，但是圣女因为实际上没什么卵用，所以她只有疯狂的遵循自己的信仰，敬奉天使。所以对身边的人态度非常差。<br>但是剧情要发展，编剧就得搞事，因为城市已经快完蛋了，所以地震还是挺平常的，每次地震都有大量的人死去，所以这代圣女就得按规矩跳崖来安抚民心了。不过既然有男主，自然是想办法救了下来。。。<br>这章初看感觉非常神棍（其实就是很神棍），但是实际想一想，圣女的存在真的是没有意义的吗？<br>很多人觉得这章剧情没什么意思，不过这章对信仰的讨论实在是发人深思。<br>究竟什么才是真正的信仰呢？当得知自己的信仰是不可靠的时候，你会怎么想，怎么做？  </p>
<h3 id="愚者の涙"><a href="#愚者の涙" class="headerlink" title="愚者の涙"></a>愚者の涙</h3><p>剧情到了这章已经非常严肃了，崩塌也搞了好几次，男主也慢慢的开始不在下层和牢狱呆了，换句话说，他升官了。<br>然后剧情发展，到了王城，这章讲道理一开始我在看 CM 的时候觉得，攻略王女(皇帝)有什么用啊。。。看完这章后我才发现，原来这章的剧情是最后一把钥匙啊。<br>王女从小便作为执政公，说人话就是宰相的傀儡活着，这点和爱丽丝是有点像。不过王女因为居然不是皇帝亲生的（这绿帽真是屌）所以心怀阴影。这章就是她从傀儡到觉醒，然后成为一位合格的国王的故事。<br>这章中有句话让我感触很大:”王乃万民之父”。是啊，为王者注定孤独，但是这章中一开始有个伏笔就是莉西亚小时候编了个花环献给父王，然后在最后接过皇冠的时候，发现自己小时候的花冠粘在王冠中，而且老皇帝还写了张纸条（原谅我不太记得写了啥）。算是冷酷中的一点点温情吧。  </p>
<blockquote>
<p>”当王者，就要对一切抱有怀疑，用自己的双眼看到的事物才可信任，从别人口中说的话，都应先质疑。”<br>“那凯伊姆你的话呢？”<br>“即使是对我而言，也不应该抱有绝对的信任，这就是孤独的王者道路。”</p>
</blockquote>
<h3 id="小动物-Seeking-Asphodelus"><a href="#小动物-Seeking-Asphodelus" class="headerlink" title="小动物/Seeking Asphodelus"></a>小动物/Seeking Asphodelus</h3><p>这节的标题一直很纠结，因为蒂亚在这章之前存在感真的不高。。。然而后面剧情爆发的太激烈，我到现在也不知道怎么描述 Eustia。<br>在前面几章的铺垫下，我们已经知道了让这座城市浮起来的不是圣女，是天使的力量。然而实际上天使是被人们囚禁起来的，大概可以理解为一个超强核电站。但是人类抽了那么久，旧的核电站已经不堪重负，然后就有了蒂亚。<br>蒂亚可以净化羽翼病患者的双翼，也可以净化那个什么福音，但是反之她的身体也越来越朝着天使的状态发展。<br>这章的男主已经得知了许多的真相，比如城市的悬浮基本全靠蒂亚的努力 blabla 的，于是他虽然非常不希望自己心爱的蒂亚受苦，但是因为知道了真相，所以反而迷茫不前。<br>还好最后男主醒悟了，跑去救蒂亚，但是太晚了，蒂亚已经成了天使，然后就是听老天使（初代圣女）的话来毁灭人类了。不过男主废了一条胳膊和一条腿之后唤醒了蒂亚，最后蒂亚把污秽给净化掉之后，与世界融为了一体。城市掉落在了大地上，人类就迎来了崭新的未来。<br>虽然早有被剧透，小动物最后是要死的，但是真玩到最后小动物牺牲掉，还是有点鼻酸。<br><img src="https://ws4.sinaimg.cn/large/a15b4afegy1fe1olqcinfj20sg0g04qr.jpg" alt="">  </p>
<p>写了这么多屁话，能看到这里的应该没有人了，那我就放心大胆的开始瞎说了，可以随便喷。<br>三天推完，不只是被剧情吸引，而且也有我急切的想得知一些问题的答案的原因在内。<br>男主一路走来，他看似什么都懂，看透一切，但是实际上，他什么都不知道，只是单纯在逃避着，当别人都走上自己的道路时，只有他还在迷茫。<br>玩 galgame ，我觉得代入感虽然不是必要的，但是如果有肯定更好。如果换做十年后的我，可能只会给这部作品打八分。但是这部作品教会了我不少没人教给我的东西。我知道这听起来挺中二的，我也不反驳，但是如果你有认真看完开头我那堆废话，我觉得可能会有人能理解一点吧。<br>感谢这部游戏，虽然剧情最后感觉有点赶工，但是从头到尾，每个人都没有对自己的行为后悔，都在为自己的人生，自己的愿望而努力着。<br>所以，我也不能再迷茫了啊。就像爱丽丝一样，虽然被男主买下，但是男主还是希望她能走出自己的阴影，去面对自己的人生。<br>人生的前 18 年，我只需要听父母的话，听老师的话，不需要思考柴米油盐酱醋茶和别的事情，只需要完成他们的任务就行。然而时至如今，已经没有人可以帮助你做出选择，人生也没 save / load，选择了就要面对。<br>从明天起，不再迷惘，看看自己的微博昵称，看看文件夹里尘封的梦想。<br>然后迈步向前吧。  </p>
<blockquote>
<p><strong>Robert Frost - The Road Not Taken</strong><br>Two roads diverged in a yellow wood,<br>And sorry I could not travel both<br> And be one traveler, long I stood<br>   And looked down one as far as I could<br> To where it bent in the undergrowth;<br> To where it bent in the undergrowth;<br> And having perhaps the better claim,<br> Because it was grassy and wanted wear;<br>Though as for that the passing there<br>Had worn them really about the same,<br> And both that morning equally lay<br> In leaves no step had trodden black.<br> Oh, I kept the first for another day!<br> Yet knowing how way leads on to way,<br> I doubted if I should ever come back.<br>    I shall be telling this with a sigh<br>   Somewhere ages and ages hence:<br>   Two roads diverged in a wood, and I–<br>   I took the one less traveled by,<br>    And that has made all the difference.  </p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;本文极度啰嗦且充满个人负能量，为了不浪费你的时间请赶紧ctrl-w。&quot;&gt;&lt;a href=&quot;#本文极度啰嗦且充满个人负能量，为了不浪费你的时间请赶紧ctrl-w。&quot; class=&quot;headerlink&quot; title=&quot;本文极度啰嗦且充满个人负能量，为了不浪费你的时间请赶紧ctrl+w。&quot;&gt;&lt;/a&gt;本文极度啰嗦且充满个人负能量，为了不浪费你的时间请赶紧ctrl+w。&lt;/h1&gt;
    
    </summary>
    
      <category term="XJB写" scheme="https://blog.dangge.moe/categories/XJB%E5%86%99/"/>
    
    
      <category term="galgame" scheme="https://blog.dangge.moe/tags/galgame/"/>
    
      <category term="碎碎念" scheme="https://blog.dangge.moe/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
      <category term="秽翼的尤斯蒂娅" scheme="https://blog.dangge.moe/tags/%E7%A7%BD%E7%BF%BC%E7%9A%84%E5%B0%A4%E6%96%AF%E8%92%82%E5%A8%85/"/>
    
  </entry>
  
  <entry>
    <title>0基础开发 zzuwlan 自动认证脚本的总结</title>
    <link href="https://blog.dangge.moe/2017/03/05/index.html"/>
    <id>https://blog.dangge.moe/2017/03/05/index.html</id>
    <published>2017-03-05T15:46:00.000Z</published>
    <updated>2017-03-06T04:53:29.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="应该是巨坑，超长且啰嗦"><a href="#应该是巨坑，超长且啰嗦" class="headerlink" title="应该是巨坑，超长且啰嗦"></a>应该是巨坑，超长且啰嗦</h1><h3 id="为什么要有这个东西"><a href="#为什么要有这个东西" class="headerlink" title="为什么要有这个东西"></a>为什么要有这个东西</h3><p>先来看看认证界面是什么样的:<br><img src="https://o5zfda3bu.qnssl.com/blog/zzuwlan1.png" alt="认证界面"><br>看起来多么简单粗暴，完美秉承了 simple is the best 的原则（口胡不下去了<br>反正就是每次都要打个验证码还要点点点真 TM 烦，作为一个程序员怎么能每天干这么机械的活！<br>说搞就搞，先去买本犀牛书看….(卒</p>
<h3 id="开发思路"><a href="#开发思路" class="headerlink" title="开发思路"></a>开发思路</h3><p>首先通过 chrome 的网络分析工具，我们得知首先你请求任意一个地址，zzuwlan 都会将你劫持到认证的页面去，代码大概是长这样的:<br><img src="https://o5zfda3bu.qnssl.com/blog/zzuwlan2.png" alt="认证劫持"><br>然后就是上图那样的认证界面，输入用户名密码和验证码点击认证就 OK 了，看起来是不是非常简单？<br>确实也不难，但是为了防止你用脚本完成这个过程(我猜的)，他们设置了一些坑。<br>首先确定脚本的思路，我们需要使用<a href="https://tampermonkey.net/" target="_blank" rel="external">tampermonkey</a>来运行自定义脚本，这个东西是干嘛的我就不啰嗦了。<br>脚本一开始的思路是：随便 get 一个 http 的网址(因为 https 的网址会卡在证书验证上)，然后拿到认证地址，访问，填充用户名和密码，验证码我们选择直接手撸 ocr 验证，然后后面提交就是了。<br>当然，既然是一开始。。。就证明我踩坑了。<br><a id="more"></a></p>
<h3 id="开发中踩的那些坑"><a href="#开发中踩的那些坑" class="headerlink" title="开发中踩的那些坑"></a>开发中踩的那些坑</h3><p>首先，我们来看这个认证页面:<br><img src="https://o5zfda3bu.qnssl.com/blog/zzuwlan3.png" alt="zzuwlan 第一页"><br>嗯，原来是内嵌了个 iframe 啊，也就是说认证的主体其实是 <a href="http://202.196.64.132:8080/login0.htm" target="_blank" rel="external">http://202.196.64.132:8080/login0.htm</a><br>然后看看当前页的网址栏，有没有发现什么不同？<br>没错，这个坑爹学校居然玩跨域。。。于是纯浏览器端的 js 瞬间被打死（跨域限制），不过我想出了一个非常 trick 的方法。。。  </p>
<pre>
window.location.href="http://202.196.64.132:8080/";
</pre>  

<p>山不过来，我便过去。<br>解决了这个问题，我们终于来到了认证页面，这时候我们非常随意的用 document.querySelector 来给账号和密码赋值，然后是验证码。<br>我校总算是没有上传说中的文字验证码（笑），这个验证码虽然看起来不难，而且现在网上遍地都是免费的 OCR 接口，但是我是在写 WiFi 的自动认证啊！哪有网络可用啊摔<br>没有网络也代表了一件事：你不能用任何第三方的 js 库，除非你愿意把那一坨塞进一个几 KB 大的脚本里。<br>不过这么简单的东西也不是特别需要第三方的库，作为新手还是多写点原生比较好（<br>首先我们来分析一下这个验证码：<br><img src="https://o5zfda3bu.qnssl.com/blog/zzuwlan4.png" alt="zzuwlan 验证码"><br>长宽不变，字符间距也不变，有随机的噪点，但是字符没有扭曲和变形，且没有长条色带干扰。<br>那么我们的处理思路就是，首先灰度二值，然后我们看到此时的图片基本是黑白两色了。由于字符间距不变，我们可以直接切割图片来分析明暗值。<br>将明暗值转换为01存进字符串，我们就手动实现了一个验证码识别库（雾）<br>然而在调用 OCR 函数的时候遇到了一个问题，这个图片它本身也是跨域的。。。  所以我们不能在一般认证的首页来直接拿到它，于是最后还是用了 js 跳转来处理跨域。<br>处理好验证码后我们的表单就填充完了，本来是想写一个 ajax 来提交的，然后一看源码，又是跨域。<br><img src="https://o5zfda3bu.qnssl.com/blog/zzuwlan5.png" alt="zzuwlan post"><br>其实油猴本身提供了一个 GM_xmlhttpRequest 方法来让你跨域提交，但是这个东西在第一次使用的时候会弹窗要求你允许此次跨域请求。。。考虑到普通用户的体验，没有用这种办法而是用传统的模拟点击了。（其实我很好奇为什么直接点击就能跨域 post？）<br>认证提交后返回了一个页面，里面有个函数 zzjwlan() ,里面的方法就是跳转到一个加了时间戳和 seed 的页面去。这样认证流程就结束了。<br>回头看这第一版的脚本，简单粗暴的 IIFE ,毫无设计模式，各种硬编码，作为一个有点理想的程序员怎么能忍这个。<br>开始重构。  </p>
<h3 id="重构不是长久之计"><a href="#重构不是长久之计" class="headerlink" title="重构不是长久之计"></a>重构不是长久之计</h3><p>由于第一版的设计里直接硬编码了账号和密码，在这一版本我决定使用 cookies 来存储。<br>第一次访问的时候脚本检测 cookies，如果没有的话就弹窗输入并保存起来，之后就可以多次使用。<br>还有第一版并没有考虑弱网条件下的各种问题，比如验证码可能还没加载好，于是在一番摸索和请教后使用监听器完成了验证码的加载。<br>说到这个验证码的加载，学校的设计挺有意思，页面渲染的时候首先用一张”正在载入”的图片占位，然后他写了一个函数动态替换了那个图片，所以我一开始直接选择元素只能取到”正在载入”那张图片。之后在 <a href="https://github.com/lincanbin" target="_blank" rel="external">饼少</a><br>和<a href="https://i.nyaa.cat/8f88d4eefa51463aa7b14399d4c91ea8" target="_blank" rel="external">美羽</a>的帮助和教导下使用监听器完成了这个功能。<br>由于测试的时候多次重现了各种各样的错误，于是这个版本也加入了错误的处理，代码写的很直接，还是选择 dom 元素然后 substring 来分析是什么错误。我觉得这样写大概是不太科学的，但是并没有别的思路，如果你有更好的方法还请不吝赐教。<br>重构的第二版本大概就做了这些事，还有一点就是把一些函数给独立出来，放在 IIFE 里顺序执行了，这个是 java 里的写法，果然没基础硬写总会感觉坑坑的。。。还是要多看看别人的优秀代码啊。  </p>
<h3 id="反思与总结"><a href="#反思与总结" class="headerlink" title="反思与总结"></a>反思与总结</h3><p>三天时间写了这么个小玩具，其实个人还是不太满意的。因为即使重构过一遍，代码还是很乱，而且自己对 js 和网页的执行顺序等基础知识掌握还十分不牢固，果然纸上得来终觉浅，还是应该多学习。<br>另外有个插曲，在开发的时候因为是面向谷歌编程(雾)，有几次因为某墙干扰太严重用了百度，然后就踩了一个坑。。。<br>在处理验证码的输入的时候，百度出来的结果基本都是让你来用 onchange 啊 oninput 这样的方法，我就照着填了上去。。。然后测试就被坑了一个小时，最后跑去看了 MDN 和 爆栈 的讲解后总结了这么几点:<br>1.onchange事件在内容改变（两次内容有可能还是相等的）且失去焦点时触发.<br>2.onpropertychange事件是实时触发,js 操作的改变也可以触发，但是这个事件是 IE only。。。<br>3.oninput事件在value改变时实时触发，但是不响应 js 改变和浏览器下拉框中保存的选项 。。。<br>于是这个地方我还是用 settimeout 来处理了，非常不优雅，如果你有什么解决方法还请不吝赐教。<br>总结：百度谁用谁傻逼    </p>
<p>最后用一句乔布斯的话来结束吧。</p>
<pre><code>Stay hungry, stay foolish.
</code></pre><p><del><a href="https://github.com/dangger/zzuwlan-auto-auth" target="_blank" rel="external">项目地址</a>求 star</del> 及各种代码 review</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;应该是巨坑，超长且啰嗦&quot;&gt;&lt;a href=&quot;#应该是巨坑，超长且啰嗦&quot; class=&quot;headerlink&quot; title=&quot;应该是巨坑，超长且啰嗦&quot;&gt;&lt;/a&gt;应该是巨坑，超长且啰嗦&lt;/h1&gt;&lt;h3 id=&quot;为什么要有这个东西&quot;&gt;&lt;a href=&quot;#为什么要有这个东西&quot; class=&quot;headerlink&quot; title=&quot;为什么要有这个东西&quot;&gt;&lt;/a&gt;为什么要有这个东西&lt;/h3&gt;&lt;p&gt;先来看看认证界面是什么样的:&lt;br&gt;&lt;img src=&quot;https://o5zfda3bu.qnssl.com/blog/zzuwlan1.png&quot; alt=&quot;认证界面&quot;&gt;&lt;br&gt;看起来多么简单粗暴，完美秉承了 simple is the best 的原则（口胡不下去了&lt;br&gt;反正就是每次都要打个验证码还要点点点真 TM 烦，作为一个程序员怎么能每天干这么机械的活！&lt;br&gt;说搞就搞，先去买本犀牛书看….(卒&lt;/p&gt;
&lt;h3 id=&quot;开发思路&quot;&gt;&lt;a href=&quot;#开发思路&quot; class=&quot;headerlink&quot; title=&quot;开发思路&quot;&gt;&lt;/a&gt;开发思路&lt;/h3&gt;&lt;p&gt;首先通过 chrome 的网络分析工具，我们得知首先你请求任意一个地址，zzuwlan 都会将你劫持到认证的页面去，代码大概是长这样的:&lt;br&gt;&lt;img src=&quot;https://o5zfda3bu.qnssl.com/blog/zzuwlan2.png&quot; alt=&quot;认证劫持&quot;&gt;&lt;br&gt;然后就是上图那样的认证界面，输入用户名密码和验证码点击认证就 OK 了，看起来是不是非常简单？&lt;br&gt;确实也不难，但是为了防止你用脚本完成这个过程(我猜的)，他们设置了一些坑。&lt;br&gt;首先确定脚本的思路，我们需要使用&lt;a href=&quot;https://tampermonkey.net/&quot;&gt;tampermonkey&lt;/a&gt;来运行自定义脚本，这个东西是干嘛的我就不啰嗦了。&lt;br&gt;脚本一开始的思路是：随便 get 一个 http 的网址(因为 https 的网址会卡在证书验证上)，然后拿到认证地址，访问，填充用户名和密码，验证码我们选择直接手撸 ocr 验证，然后后面提交就是了。&lt;br&gt;当然，既然是一开始。。。就证明我踩坑了。&lt;br&gt;
    
    </summary>
    
      <category term="渣技术" scheme="https://blog.dangge.moe/categories/%E6%B8%A3%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="zzuwlan" scheme="https://blog.dangge.moe/tags/zzuwlan/"/>
    
      <category term="油猴" scheme="https://blog.dangge.moe/tags/%E6%B2%B9%E7%8C%B4/"/>
    
      <category term="JavaScript" scheme="https://blog.dangge.moe/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Mac下如何通过isatap隧道使用郑大IPV6</title>
    <link href="https://blog.dangge.moe/2017/02/26/index.html"/>
    <id>https://blog.dangge.moe/2017/02/26/index.html</id>
    <published>2017-02-26T13:17:00.000Z</published>
    <updated>2017-02-26T14:13:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>嗯。。。如果你是Windows想使用isatap隧道，请参考<a href="https://blog.dangge.moe/2015/06/08/index.html">这篇文章</a>  </p>
<h4 id="为什么要有这个东西"><a href="#为什么要有这个东西" class="headerlink" title="为什么要有这个东西"></a>为什么要有这个东西</h4><p>傻*我校并没有DHCP的ipv6能用(起码2017年02月26日21:19:15之前不通)，不过还好我校提供了isatap隧道接入。。。<br>然而你百度出来的教程99%都是Windows下的用法，mac下的用法目前来看除了tuna的大佬们写了个之外，别的并搜不到什么。。。<br>嘛毕竟这玩意在国内也就那么几个学校有。。。可以理解</p>
<h4 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h4><p>笔者目前使用的是Mac OS 10.11.6，不过我觉得这玩意应该在10.12也可以用。。。<br>脚本如下:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/sh</span></div><div class="line"><span class="comment">#清除IPV6路由表</span></div><div class="line">route delete -inet6 default</div><div class="line">ifconfig gif0 destroy</div><div class="line"><span class="comment">#取本地的ip地址，网卡名不一样的自己看着改</span></div><div class="line">IP=`ifconfig en1 | grep <span class="string">"inet "</span>| awk <span class="string">'&#123;print $2&#125;'</span>`</div><div class="line"><span class="comment">#下面的isatap隧道地址写死了，如果你是别的学校的可以自己改那个222.22.32.161...(应该都看得懂</span></div><div class="line"><span class="comment">#再啰嗦一句 ipv6头可以在Windows下获取一次然后得出。。。前面是固定的，后面是你的内网IP地址- -</span></div><div class="line">sudo ifconfig gif0 create</div><div class="line">sudo ifconfig gif0 tunnel <span class="variable">$IP</span> 222.22.32.161</div><div class="line">sudo ipconfig <span class="built_in">set</span> gif0 MANUAL-V6 2001:da8:5000:40f:0:5efe:<span class="variable">$IP</span> 64</div><div class="line">sudo route add -inet6 ::/0 -interface gif0</div></pre></td></tr></table></figure></p>
<p>注意事项:<br>此脚本需要执行权限，sudo chmod +x isatap.sh（应该都看得懂</p>
<h4 id="资料参考"><a href="#资料参考" class="headerlink" title="资料参考"></a>资料参考</h4><p><a href="https://github.com/tuna/ipv6.tsinghua.edu.cn/blob/master/isatap.md" target="_blank" rel="external">清华大学 IPv6 ISATAP 配置说明</a><br>PS：其实Windows下面那个脚本也可以更新了。。。不过懒癌发作凑合用吧。。。<br>Linux的脚本直接参考TUNA给的。。。改改就能用<br>PPS：大清的脚本是有坑的。。。改了好久</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;嗯。。。如果你是Windows想使用isatap隧道，请参考&lt;a href=&quot;https://blog.dangge.moe/2015/06/08/index.html&quot;&gt;这篇文章&lt;/a&gt;  &lt;/p&gt;
&lt;h4 id=&quot;为什么要有这个东西&quot;&gt;&lt;a href=&quot;#为什么要有这个
    
    </summary>
    
      <category term="渣技术" scheme="https://blog.dangge.moe/categories/%E6%B8%A3%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="IPV6" scheme="https://blog.dangge.moe/tags/IPV6/"/>
    
      <category term="isatap" scheme="https://blog.dangge.moe/tags/isatap/"/>
    
  </entry>
  
  <entry>
    <title>Mac下配置基于http认证的git环境</title>
    <link href="https://blog.dangge.moe/2017/02/19/index.html"/>
    <id>https://blog.dangge.moe/2017/02/19/index.html</id>
    <published>2017-02-19T09:58:00.000Z</published>
    <updated>2017-02-19T10:10:31.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="为什么要有这个东西"><a href="#为什么要有这个东西" class="headerlink" title="为什么要有这个东西"></a>为什么要有这个东西</h3><p>hostker是一家非常好的。。。额云计算服务商（他们自己说的），但是一直以来有个有点蛋疼的问题。。。<br>他们家的应用虽然基于git，但是不支持ssh。。。<br>然后每次commit都要敲一遍账号密码。。。虽然不是很费事但是总归不是个办法<br>然后今天xjb搞的时候发现了个东西。。。叫<a href="https://www.ibm.com/support/knowledgecenter/ssw_aix_71/com.ibm.aix.files/netrc.htm" target="_blank" rel="external">.netrc</a><br>大概看了看，可以解决每次都输入账号密码来认证的蛋疼局面- -<br><del>我一定不是最后一个知道的！</del>  </p>
<h3 id="怎么用"><a href="#怎么用" class="headerlink" title="怎么用"></a>怎么用</h3><p><pre><br>vim ~/.netrc<br></pre></p>
<p><pre><br>machine git-ct.smartgslb.com（这里可以替换成别的git地址）<br>    login example@example.com（你的邮箱） password pwd(你的密码)<br></pre><br>ok大功告成。。。是不是非常简单无脑<del>然而我敲了两年岂可修</del></p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>多上网长见识。。。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;为什么要有这个东西&quot;&gt;&lt;a href=&quot;#为什么要有这个东西&quot; class=&quot;headerlink&quot; title=&quot;为什么要有这个东西&quot;&gt;&lt;/a&gt;为什么要有这个东西&lt;/h3&gt;&lt;p&gt;hostker是一家非常好的。。。额云计算服务商（他们自己说的），但是一直以来有个有
    
    </summary>
    
    
      <category term="git" scheme="https://blog.dangge.moe/tags/git/"/>
    
      <category term="hostker" scheme="https://blog.dangge.moe/tags/hostker/"/>
    
  </entry>
  
  <entry>
    <title>一次镜像站配置问题的解决</title>
    <link href="https://blog.dangge.moe/2017/01/11/index.html"/>
    <id>https://blog.dangge.moe/2017/01/11/index.html</id>
    <published>2017-01-10T16:43:09.000Z</published>
    <updated>2017-01-10T17:07:05.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>在使用debian7更新的时候,发现自己负责的<a href="https://mirrors.zzu.edu.cn" target="_blank" rel="external">校园镜像站</a>在强制 https 之后居然不能用了,提示是这样的:</p>
<blockquote>
<p>gnutls_handshake() warning: The server name sent was not recognized</p>
</blockquote>
<p>WTF???明明 <a href="https://mirrors.ustc.edu.cn" target="_blank" rel="external">USTC</a>就毫无问题,为啥换到我校的就不行了?  </p>
<h3 id="debug"><a href="#debug" class="headerlink" title="debug"></a>debug</h3><p>一开始我以为是服务端问题,然后各种谷歌也没结果,最后找到了<a href="https://49.gs/" target="_blank" rel="external">神秀师傅</a>一番请教之后,排除了服务端的问题…(顺便一提我随手配的SSL在ssllab评分居然都是A,科科)<br>那问题看来是服务端的了,然后神秀一番操作之后告诉我好像这个域名的SNI有点问题耶<br>然后丢给我一个<a href="https://jervis.ws/qualys-labs-ssl-test-incorrect-sni-alerts/" target="_blank" rel="external">链接</a>  </p>
<h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>所以就是在apache的 ssl.conf 里加一行  </p>
<blockquote>
<p>ServerName www.你的域名.com    </p>
</blockquote>
<p>即可.<br>妈的好智障的问题啊…而且并不是所有系统都会触发,神秀用的ubuntu16.04就可以强行无视这个错误更新…</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h3&gt;&lt;p&gt;在使用debian7更新的时候,发现自己负责的&lt;a href=&quot;https://mirrors.zzu.edu.cn&quot; target=&quot;_b
    
    </summary>
    
      <category term="渣技术" scheme="https://blog.dangge.moe/categories/%E6%B8%A3%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="镜像站" scheme="https://blog.dangge.moe/tags/%E9%95%9C%E5%83%8F%E7%AB%99/"/>
    
      <category term="apache" scheme="https://blog.dangge.moe/tags/apache/"/>
    
      <category term="ssl" scheme="https://blog.dangge.moe/tags/ssl/"/>
    
  </entry>
  
  <entry>
    <title>君の名は。</title>
    <link href="https://blog.dangge.moe/2016/12/09/index.html"/>
    <id>https://blog.dangge.moe/2016/12/09/index.html</id>
    <published>2016-12-09T13:37:04.000Z</published>
    <updated>2016-12-09T13:45:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>在经历了盗版流出,某组及时做了翻译但是被喷成狗然后大家撕逼大战这么一堆心累的破事之后,这个片子终于是被光线影业确认引进了.<br>然后我自然就去看了…归功于你B的福,我还拿了一张第二天的票可以二刷一下.<br>感谢二刷,我看到了很多第一遍看不到的细节.<br>然后懒癌发作,这文也鸽了一星期,然后我去三刷了…上映一周之后,人明显少了很多,观影气氛还是挺不错的.<del>除了有个傻逼男一直在BB剧情</del></p>
<p>首先还是谈一谈我对这片子本身的看法吧.<br>首先,作画无敌.一刷的时候看到开头那个OP我差一点以为是60帧.然后二刷的时候留意了一下,只有OP里三叶在地上坐着那处是一拍一(我能看出来的),别的应该都是正常的一拍三.然而,即使不是<del>60帧</del>(确认是24帧),即使不是4K(<del>存疑</del>)确认2K,安藤雅司的这个作画也是神级.毕竟说起新海诚,大家的印象应该都是一致的,暖色调,光影,细腻到浪费经费的背景,这些都是安藤这个天才作监的功劳.可以这么说,你名的作画应该代表了2016年底之前,日本手绘动画的巅峰.  </p>
<p>然后说说人设吧.实际上人设也有安藤这个天才的参与,但是主要还是田中将贺这老怪物搞的.他的人设其实并不算特别的令人印象深刻,但是这种富有三次元特征的二次元人设还是挺合大众胃口的,毕竟对这个片子来说,重要的是受众广,而不是像Q娃一样粉丝向.  </p>
<p>然后剧情.其实看了三遍之后,这个剧情已经很清晰了,没有别的作品那么烧脑.作为一部和时间有关的作品,本片的时间线毫无疑问是很乱的,但是如果你是一个注重细节的人,那么本片除了中后期的时间线稍微乱了一点不容易立刻反应过来,其他时间还是非常好认的.  </p>
<h3 id="严重剧透注意"><a href="#严重剧透注意" class="headerlink" title="严重剧透注意"></a>严重剧透注意</h3><p><del>本来这里写了一堆剧情简介,但是我发现这玩意毫无意义,删了</del></p>
<p>8年后的泷已经成为准社畜,三叶比他大三岁自然早就是社畜(应该吧),然后这两个人在电车上错过了一次.<br>没错,电车,男女主,错过.<br>这才是新海诚片子的一般尿性,第一遍看到这里我已经准备好刀片了.<br>然后镜头一切就冬天了,男主走过一座桥,和撑伞的女主擦肩而过.<br>看到这里,我觉得好多人已经要忍不住了…<br>还好新海诚这次想明白了,卖座和理想只能选一个,于是男主女主在一个楼梯前相遇了.<br>这片子我个人最泪点的地方,不是女主孤身一人,花掉了自己一年零花钱跑去东京见男主;也不是女主在跑去说服她父亲的路上跌倒,然后看到手心里男主写的”すきだ”;而是最后,男主和女主在两列电车上互相抬头,然后都跑下车去找对方,最后在那个神社前,两人擦肩而过那一瞬.<br>男主回头了,女主也回头了.<br>这就足够让看过秒五的人飙泪了.<br>即使忘却了名字,但是能再次相遇,真是太好了呢.  </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在经历了盗版流出,某组及时做了翻译但是被喷成狗然后大家撕逼大战这么一堆心累的破事之后,这个片子终于是被光线影业确认引进了.&lt;br&gt;然后我自然就去看了…归功于你B的福,我还拿了一张第二天的票可以二刷一下.&lt;br&gt;感谢二刷,我看到了很多第一遍看不到的细节.&lt;br&gt;然后懒癌发作,
    
    </summary>
    
      <category term="XJB写" scheme="https://blog.dangge.moe/categories/XJB%E5%86%99/"/>
    
    
      <category term="你的名字" scheme="https://blog.dangge.moe/tags/%E4%BD%A0%E7%9A%84%E5%90%8D%E5%AD%97/"/>
    
  </entry>
  
  <entry>
    <title>一个神秘IP列表</title>
    <link href="https://blog.dangge.moe/2016/10/15/index.html"/>
    <id>https://blog.dangge.moe/2016/10/15/index.html</id>
    <published>2016-10-15T15:42:56.000Z</published>
    <updated>2016-10-15T16:11:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>有啥用呢?  自己琢磨吧<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line">101.96.10.19</div><div class="line">101.96.10.20</div><div class="line">101.96.10.21</div><div class="line">101.96.10.22</div><div class="line">101.96.10.23</div><div class="line">101.96.10.24</div><div class="line">101.96.10.25</div><div class="line">101.96.10.26</div><div class="line">101.96.10.27</div><div class="line">101.96.10.28</div><div class="line">101.96.10.29</div><div class="line">101.96.10.30</div><div class="line">101.96.10.31</div><div class="line">101.96.10.32</div><div class="line">101.96.10.33</div><div class="line">101.96.10.34</div><div class="line">101.96.10.35</div><div class="line">101.96.10.37</div><div class="line">101.96.10.38</div><div class="line">101.96.10.39</div><div class="line">101.96.10.40</div><div class="line">101.96.10.41</div><div class="line">101.96.10.42</div><div class="line">101.96.10.43</div><div class="line">101.96.10.44</div><div class="line">101.96.10.45</div><div class="line">101.96.10.46</div><div class="line">101.96.10.47</div><div class="line">101.96.10.50</div><div class="line">101.96.10.51</div><div class="line">101.96.10.52</div><div class="line">101.96.10.53</div><div class="line">101.96.10.54</div><div class="line">101.96.10.55</div><div class="line">101.96.10.56</div><div class="line">101.96.10.57</div><div class="line">101.96.10.58</div><div class="line">101.96.10.59</div><div class="line">101.96.10.60</div><div class="line">101.96.10.61</div><div class="line">101.96.10.62</div><div class="line">101.96.10.63</div><div class="line">101.96.10.64</div><div class="line">101.96.10.65</div><div class="line">101.96.10.66</div><div class="line">101.96.10.67</div><div class="line">101.96.10.68</div><div class="line">101.96.10.69</div><div class="line">101.96.10.70</div><div class="line">101.96.10.71</div><div class="line">101.96.10.72</div><div class="line">101.96.10.73</div><div class="line">101.96.10.74</div><div class="line">101.96.10.75</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有啥用呢?  自己琢磨吧&lt;br&gt;
    
    </summary>
    
      <category term="渣技术" scheme="https://blog.dangge.moe/categories/%E6%B8%A3%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>针对 hostker 的 HSTS 设置 v2</title>
    <link href="https://blog.dangge.moe/2016/10/01/index.html"/>
    <id>https://blog.dangge.moe/2016/10/01/index.html</id>
    <published>2016-10-01T13:03:34.000Z</published>
    <updated>2016-10-01T13:03:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>本来不想写太多的,但是我被坑了之后感觉还是要改一下的<br>首先,我们要明确一件事: HSTS 是什么<br><a href="https://zh.wikipedia.org/wiki/HTTP%E4%B8%A5%E6%A0%BC%E4%BC%A0%E8%BE%93%E5%AE%89%E5%85%A8" target="_blank" rel="external">Wikipedia</a> 是这么写的:  </p>
<blockquote>
<p>HSTS的作用是强制客户端（如浏览器）使用HTTPS与服务器创建连接。服务器开启HSTS的方法是，当客户端通过HTTPS发出请求时，在服务器返回的超文本传输协议响应头中包含Strict-Transport-Security字段。非加密传输时设置的HSTS字段无效。</p>
</blockquote>
<p>所以我们现在就知道了,要实现 HSTS ,你必须有一个 header 去告诉浏览器.<br>我的 .htaccess 文件是这样写的:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">#针对 hostker 的 HSTS 设置</div><div class="line">RewriteEngine On</div><div class="line">RewriteCond %&#123;HTTP:KERSSL&#125; !on</div><div class="line">&lt;If &quot;%&#123;HTTP:KERSSL&#125; == &apos;on&apos;&quot;&gt;</div><div class="line">    # Header Set</div><div class="line">    Header always set Strict-Transport-Security &quot;max-age=86400&quot;</div><div class="line">&lt;/If&gt;</div><div class="line">RewriteRule (.*) https://blog.dangge.moe%&#123;REQUEST_URI&#125; [R=301,L]</div><div class="line">#貌似是 hexo 要求的</div><div class="line">RewriteBase /</div><div class="line">RewriteCond %&#123;REQUEST_FILENAME&#125; !-f</div><div class="line">RewriteCond %&#123;REQUEST_FILENAME&#125; !-d</div><div class="line">RewriteRule ^(.*)$ /index.php/$1 [L]</div></pre></td></tr></table></figure></p>
<p>max-age 的值我设置的比较小,主要是怕设置太长,万一网站迁移的时候浏览器崩了…  –<a href="http://weibo.com/1787076481/EaqcxhWIf" target="_blank" rel="external">出处</a><br>貌似是有点水。。。然而懒的写字<br>希望能帮助到谁。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本来不想写太多的,但是我被坑了之后感觉还是要改一下的&lt;br&gt;首先,我们要明确一件事: HSTS 是什么&lt;br&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/HTTP%E4%B8%A5%E6%A0%BC%E4%BC%A0%E8%BE%93%E5
    
    </summary>
    
      <category term="渣技术" scheme="https://blog.dangge.moe/categories/%E6%B8%A3%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>一份 nginx.conf 备份</title>
    <link href="https://blog.dangge.moe/2016/07/31/index.html"/>
    <id>https://blog.dangge.moe/2016/07/31/index.html</id>
    <published>2016-07-31T13:34:15.000Z</published>
    <updated>2016-07-31T13:40:09.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">    # Port that the web server will listen on.</div><div class="line">    listen          80;</div><div class="line"></div><div class="line">    # Host that will serve this project.</div><div class="line">    server_name     一般填域名;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">    # The location of our projects public directory.</div><div class="line">    root            /home/www/这里一般填域名;</div><div class="line"></div><div class="line">    # Point index to the Laravel front controller.</div><div class="line">    index           index.php;</div><div class="line"></div><div class="line">    location / &#123;</div><div class="line"></div><div class="line">        # URLs to attempt, including pretty ones.</div><div class="line">        try_files   $uri $uri/ /index.php?$query_string;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    # Remove trailing slash to please routing system.</div><div class="line">    if (!-d $request_filename) &#123;</div><div class="line">        rewrite     ^/(.+)/$ /$1 permanent;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    # PHP FPM configuration.</div><div class="line">    location ~* \.php$ &#123;</div><div class="line">            fastcgi_pass                    unix:/var/run/php5-fpm.sock;</div><div class="line">            fastcgi_index                   index.php;</div><div class="line">            fastcgi_split_path_info         ^(.+\.php)(.*)$;</div><div class="line">            include                         /etc/nginx/fastcgi_params;</div><div class="line">            fastcgi_param                   SCRIPT_FILENAME $document_root$fastcgi_script_name;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    # We don&apos;t need .ht files with nginx.</div><div class="line">    location ~ /\.ht &#123;</div><div class="line">            deny all;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    # Set header expirations on per-project basis</div><div class="line">    location ~* \.(?:ico|css|js|jpe?g|JPG|png|svg|woff)$ &#123;</div><div class="line">            expires 365d;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/di
    
    </summary>
    
      <category term="渣技术" scheme="https://blog.dangge.moe/categories/%E6%B8%A3%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="nginx" scheme="https://blog.dangge.moe/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>VPS 下载 Google Drive 片源</title>
    <link href="https://blog.dangge.moe/2016/05/13/index.html"/>
    <id>https://blog.dangge.moe/2016/05/13/index.html</id>
    <published>2016-05-12T18:11:59.000Z</published>
    <updated>2016-05-20T15:54:43.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="自用记录"><a href="#自用记录" class="headerlink" title="自用记录"></a>自用记录</h2><p>0.你得有个 Linux 服务器<br>0.1.去<a href="https://github.com/prasmussen/gdrive" target="_blank" rel="external">github地址</a>下载你对应系统的二进制包<br>0.2.装好它<br>0.3.第一次使用需要 Oauth2 授权，不多说<br>1.<del>把别人发布的片源转存到自己的 Google Drive</del>直接用文件 id 就行，我蠢<br>2.获取<del>分享</del>链接,拿到文件 id<br>3.drive download -i &lt;文件id&gt;<br>4.python -m SimpleHTTPServer<br>5.下载，over</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;自用记录&quot;&gt;&lt;a href=&quot;#自用记录&quot; class=&quot;headerlink&quot; title=&quot;自用记录&quot;&gt;&lt;/a&gt;自用记录&lt;/h2&gt;&lt;p&gt;0.你得有个 Linux 服务器&lt;br&gt;0.1.去&lt;a href=&quot;https://github.com/prasmusse
    
    </summary>
    
      <category term="渣技术" scheme="https://blog.dangge.moe/categories/%E6%B8%A3%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>无题.</title>
    <link href="https://blog.dangge.moe/2016/04/22/index.html"/>
    <id>https://blog.dangge.moe/2016/04/22/index.html</id>
    <published>2016-04-21T22:46:00.000Z</published>
    <updated>2016-05-06T18:08:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>其实本来有很多东西想写一下<br>不过今天看到这张图<br>感觉不用写了<br><img src="https://ooo.0o0.ooo/2016/04/21/571903b35ab64.jpg" alt=""><br>看圣贤书去了.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;其实本来有很多东西想写一下&lt;br&gt;不过今天看到这张图&lt;br&gt;感觉不用写了&lt;br&gt;&lt;img src=&quot;https://ooo.0o0.ooo/2016/04/21/571903b35ab64.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;看圣贤书去了.&lt;/p&gt;

    
    </summary>
    
      <category term="default" scheme="https://blog.dangge.moe/categories/default/"/>
    
    
  </entry>
  
  <entry>
    <title>如何在限制22端口的网络中使用git服务</title>
    <link href="https://blog.dangge.moe/2016/04/06/index.html"/>
    <id>https://blog.dangge.moe/2016/04/06/index.html</id>
    <published>2016-04-05T18:04:11.000Z</published>
    <updated>2016-05-06T18:08:43.000Z</updated>
    
    <content type="html"><![CDATA[<p>垃圾学校,封锁SSH,害我没法正常提交代码!<br>废话不多说贴个图,看懂的自然懂.<br><img src="https://dn-danggepic.qbox.me/git-config-2016%E5%B9%B44%E6%9C%886%E6%97%A5.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;垃圾学校,封锁SSH,害我没法正常提交代码!&lt;br&gt;废话不多说贴个图,看懂的自然懂.&lt;br&gt;&lt;img src=&quot;https://dn-danggepic.qbox.me/git-config-2016%E5%B9%B44%E6%9C%886%E6%97%A5.jpg&quot; al
    
    </summary>
    
      <category term="default" scheme="https://blog.dangge.moe/categories/default/"/>
    
    
  </entry>
  
  <entry>
    <title>ffmpeg之常用音频转换</title>
    <link href="https://blog.dangge.moe/2015/10/30/index.html"/>
    <id>https://blog.dangge.moe/2015/10/30/index.html</id>
    <published>2015-10-30T05:05:00.000Z</published>
    <updated>2016-05-07T03:43:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天需要把aac转mp3,刚好有人整合了一下，搬运过来。<br>转载自<a href="http://linuxconfig.org/ffmpeg-audio-format-conversions" target="_blank" rel="external">ffmpeg audio format conversions</a></p>
<a id="more"></a>
<h2 id="1-Audio"><a href="#1-Audio" class="headerlink" title="1. Audio"></a>1. Audio</h2><h3 id="1-1-WAV-Waveform-Audio-File-Format"><a href="#1-1-WAV-Waveform-Audio-File-Format" class="headerlink" title="1.1. WAV - Waveform Audio File Format"></a>1.1. WAV - Waveform Audio File Format</h3><h4 id="1-1-1-wav-to-mp3"><a href="#1-1-1-wav-to-mp3" class="headerlink" title="1.1.1. wav to mp3"></a>1.1.1. wav to mp3</h4><p>Convert wav to mp3 with ffmpeg:</p>
<pre><code>ffmpeg -i audio.wav -acodec libmp3lame audio.mp3
</code></pre><h4 id="1-1-2-wav-to-ogg"><a href="#1-1-2-wav-to-ogg" class="headerlink" title="1.1.2. wav to ogg"></a>1.1.2. wav to ogg</h4><p>Convert wav to ogg with ffmpeg:</p>
<pre><code>ffmpeg -i audio.wav  -acodec libvorbis audio.ogg
</code></pre><h4 id="1-1-3-wav-to-aac"><a href="#1-1-3-wav-to-aac" class="headerlink" title="1.1.3. wav to aac"></a>1.1.3. wav to aac</h4><p>Convert wav to acc with ffmpeg:</p>
<pre><code>ffmpeg -i audio.wav  -acodec libfaac audio.aac
</code></pre><h4 id="1-1-4-wav-to-ac3"><a href="#1-1-4-wav-to-ac3" class="headerlink" title="1.1.4. wav to ac3"></a>1.1.4. wav to ac3</h4><p>Convert wav to ac3 with ffmpeg:</p>
<pre><code>ffmpeg -i audio.wav -acodec ac3 audio.mp3
</code></pre><h3 id="1-2-OGG-Free-open-standard-container"><a href="#1-2-OGG-Free-open-standard-container" class="headerlink" title="1.2. OGG - Free, open standard container"></a>1.2. OGG - Free, open standard container</h3><h4 id="1-2-1-ogg-to-mp3"><a href="#1-2-1-ogg-to-mp3" class="headerlink" title="1.2.1. ogg to mp3"></a>1.2.1. ogg to mp3</h4><p>Convert ogg to mp3 with ffmpeg:</p>
<pre><code>ffmpeg -i audio.ogg -acodec libmp3lame audio.mp3
</code></pre><p>####1.2.2. ogg to wav<br>Convert ogg to wav with ffmpeg:</p>
<pre><code>ffmpeg -i audio.ogg audio.wav
</code></pre><h4 id="1-2-3-ogg-to-aac"><a href="#1-2-3-ogg-to-aac" class="headerlink" title="1.2.3. ogg to aac"></a>1.2.3. ogg to aac</h4><p>Convert ogg to aac with ffmpeg:</p>
<pre><code>ffmpeg -i audio.ogg  -acodec libfaac audio.aac
</code></pre><h4 id="1-2-4-ogg-to-ac3"><a href="#1-2-4-ogg-to-ac3" class="headerlink" title="1.2.4. ogg to ac3"></a>1.2.4. ogg to ac3</h4><p>Convert ogg to ac3 with ffmpeg:</p>
<pre><code>ffmpeg -i audio.ogg -acodec ac3 audio.ac3
</code></pre><h3 id="1-3-AC3-Acoustic-Coder-3"><a href="#1-3-AC3-Acoustic-Coder-3" class="headerlink" title="1.3. AC3 - Acoustic Coder 3"></a>1.3. AC3 - Acoustic Coder 3</h3><h4 id="1-3-1-ac3-to-mp3"><a href="#1-3-1-ac3-to-mp3" class="headerlink" title="1.3.1. ac3 to mp3"></a>1.3.1. ac3 to mp3</h4><p>Convert ac3 to mp3 with ffmpeg:</p>
<pre><code>ffmpeg -i audio.ac3 -acodec libmp3lame audio.mp3
</code></pre><h4 id="1-3-2-ac3-to-wav"><a href="#1-3-2-ac3-to-wav" class="headerlink" title="1.3.2. ac3 to wav"></a>1.3.2. ac3 to wav</h4><p>Convert ac3 to wav with ffmpeg:</p>
<pre><code>ffmpeg -i audio.ac3 audio.wav
</code></pre><h4 id="1-3-3-ac3-to-aac"><a href="#1-3-3-ac3-to-aac" class="headerlink" title="1.3.3. ac3 to aac"></a>1.3.3. ac3 to aac</h4><p>Convert ac3 to aac with ffmpeg:</p>
<pre><code>ffmpeg -i audio.ac3  -acodec libfaac audio.aac
</code></pre><h4 id="1-3-4-ac3-to-ogg"><a href="#1-3-4-ac3-to-ogg" class="headerlink" title="1.3.4. ac3 to ogg"></a>1.3.4. ac3 to ogg</h4><p>Convert ac3 to ogg with ffmpeg:</p>
<pre><code>ffmpeg -i audio.ac3 -acodec libvorbis audio.ogg
</code></pre><h3 id="1-4-AAC-Advanced-Audio-Coding"><a href="#1-4-AAC-Advanced-Audio-Coding" class="headerlink" title="1.4. AAC - Advanced Audio Coding"></a>1.4. AAC - Advanced Audio Coding</h3><h4 id="1-4-1-aac-to-mp3"><a href="#1-4-1-aac-to-mp3" class="headerlink" title="1.4.1. aac to mp3"></a>1.4.1. aac to mp3</h4><p>Convert aac to mp3 with ffmpeg:</p>
<pre><code>ffmpeg -i audio.aac -acodec libmp3lame audio.mp3
</code></pre><h4 id="1-4-2-aac-to-wav"><a href="#1-4-2-aac-to-wav" class="headerlink" title="1.4.2. aac to wav"></a>1.4.2. aac to wav</h4><p>Convert aac to wav with ffmpeg:</p>
<pre><code>ffmpeg -i audio.aac audio.wav
</code></pre><h4 id="1-4-3-aac-to-ac3"><a href="#1-4-3-aac-to-ac3" class="headerlink" title="1.4.3. aac to ac3"></a>1.4.3. aac to ac3</h4><p>Convert aac to ac3 with ffmpeg:</p>
<pre><code>ffmpeg -i audio.aac  -acodec ac3 audio.ac3
</code></pre><h4 id="1-4-4-aac-to-ogg"><a href="#1-4-4-aac-to-ogg" class="headerlink" title="1.4.4. aac to ogg"></a>1.4.4. aac to ogg</h4><p>Convert aac to ogg with ffmpeg:</p>
<pre><code>ffmpeg -i audio.aac -libvorbis audio.ogg
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天需要把aac转mp3,刚好有人整合了一下，搬运过来。&lt;br&gt;转载自&lt;a href=&quot;http://linuxconfig.org/ffmpeg-audio-format-conversions&quot;&gt;ffmpeg audio format conversions&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="渣技术" scheme="https://blog.dangge.moe/categories/%E6%B8%A3%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>一切都是你自作自受</title>
    <link href="https://blog.dangge.moe/2015/10/18/index.html"/>
    <id>https://blog.dangge.moe/2015/10/18/index.html</id>
    <published>2015-10-18T05:38:00.000Z</published>
    <updated>2016-05-07T03:45:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>似乎有点时间没有写生存报告了，不想写作业的我决定来记录一下日常。<br>首先就是，撑过了最忙(?)的一个月，忙了开学，社团招新，理事选拔等一堆破事<br>然后顺利完结了夏季番的制作，本来打算秋季好好休息一下（上季度经常凌晨两点开工干到四点真是太肝了），结果还是接了个落地的坑。<br>不过还好，这番十一点就播完了，基本做完就是一点不到，这个时间对我来说算早睡了。</p>
<p>于是抛开字幕的事情，我也很顺利的撑过了计协那一堆破事。<br>招新完全没兴趣，反正就是一群傻逼交了20块钱，自以为能大展拳脚，殊不知自己完全是在浪费时间。<br>理事招新这个逃不过去，勉强撑了下来，招了几个好苗子，然后还把<a href="http://dangge.qiniudn.com/%E6%8F%90%E9%97%AE%E7%9A%84%E6%99%BA%E6%85%A7.html" target="_blank" rel="external">提问的智慧</a>安利给了学弟。<br>不过感觉没多少人去看，毕竟那么长，而且还是从头骂到尾。<br>另外稍微和新生聊了聊，感觉今年新生质量还是有提升的，果然学习好就是不一样。<br>上面那句话毫无讽刺意味。</p>
<p>以前我也觉得“学习好有个屌用啊你看Bill·Gates啊什么什么什么国外大牛人家都不上学”<br>现在我觉得吧，用一句宅语说就是“<a href="http://zh.moegirl.org/%E4%BD%A0%E7%9C%8B%E7%9C%8B%E4%BD%A0" target="_blank" rel="external">UCCU</a>”<br>接触的人越多，我越觉得自己好鶸，然而看着身边这群人懒懒散散坐井观天，我都替他们着急。<br>然而时间久了我也麻木了，去你大爷的，老子哪有空关心你们是不是顺利成长</p>
<p>“XXXX，帮我看看这是怎么回事？”<br>“XXXX,XX应该怎么做？”<br>我承认我这人不是什么好人，但是保姆我实在当烦了</p>
<p>……<br>每年都有新闻痛心疾首的报道，大堆大堆的大学生就业难，找不到工作，天天啃老blabla<br>当时我还很天真的认为，竞争太激烈了，生活不易啊<br>现在进到象牙塔里爬了两年，大概也算见识了点人<br>真的是，一切都是你自作自受<br>有人实习期就有0.15M的年薪，有人毕业了连个端盘子的工作都不想做。<br>两个字，活该。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;似乎有点时间没有写生存报告了，不想写作业的我决定来记录一下日常。&lt;br&gt;首先就是，撑过了最忙(?)的一个月，忙了开学，社团招新，理事选拔等一堆破事&lt;br&gt;然后顺利完结了夏季番的制作，本来打算秋季好好休息一下（上季度经常凌晨两点开工干到四点真是太肝了），结果还是接了个落地的坑
    
    </summary>
    
      <category term="碎碎念" scheme="https://blog.dangge.moe/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
  </entry>
  
  <entry>
    <title>垃圾 zzuwlan 如何手动认证</title>
    <link href="https://blog.dangge.moe/2015/09/21/index.html"/>
    <id>https://blog.dangge.moe/2015/09/21/index.html</id>
    <published>2015-09-21T08:42:00.000Z</published>
    <updated>2016-05-07T03:44:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>首先提一句，学校能开这个给我们用还是不错的，虽然效率低下而且速度不快，不过好歹省去了我开 WiFi 的力气。<br>那么问题来了，这个垃圾的 zzuwlan ，如果你第一次连接没有断开，之后貌似就会出神奇的 bug 。<br>一般的网页认证型 WiFi 都是在你未获取权限之前自动将你劫持到认证网页。<br>然而这个垃圾的 zzuwlan 也不知道搞了什么配置，这个功能一直抽风。<br>于是花了五分钟研究了下，顺便吐槽直接 GET 真是方便分析啊（姚明脸</p>
<p>首先我们连上 zzuwlan 之后需要看一下 ip 地址和 Mac 地址，这个貌似也抽风了，明明是 DHCP ，每次返回的却都是同一 IP 。<br>我们假设当前设备的 ip 是 10.117.129.1，Mac地址为640280555924<br>然后我们构造这样一个链接:</p>
<pre><code>http://202.196.64.132/?wlanuserip=(当前设备ip)&amp;wlanacname=&amp;ssid=&amp;nasip=10.241.255.254&amp;mac=(当前设备Mac地址)&amp;t=wireless-v2-plain&amp;url=http://blog.dangge.moe/
</code></pre><p>访问，正常认证即可。<br>最后再说一句学校SB。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先提一句，学校能开这个给我们用还是不错的，虽然效率低下而且速度不快，不过好歹省去了我开 WiFi 的力气。&lt;br&gt;那么问题来了，这个垃圾的 zzuwlan ，如果你第一次连接没有断开，之后貌似就会出神奇的 bug 。&lt;br&gt;一般的网页认证型 WiFi 都是在你未获取权限之
    
    </summary>
    
      <category term="渣技术" scheme="https://blog.dangge.moe/categories/%E6%B8%A3%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>Chrome 45 使用 Mactype 部分字不能渲染的问题</title>
    <link href="https://blog.dangge.moe/2015/09/13/index.html"/>
    <id>https://blog.dangge.moe/2015/09/13/index.html</id>
    <published>2015-09-13T06:31:00.000Z</published>
    <updated>2016-05-07T03:42:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>随便搜了一下，发现网上主要有这几个解决方案: </p>
<ol>
<li>chrome://flags/<br>光栅线程数设定为1</li>
<li>chrome://flags/<br>关闭ignore-gpu-blacklist 和 enable-one-copy</li>
</ol>
<p>如果不行的话就对这三个选项开关试试。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;随便搜了一下，发现网上主要有这几个解决方案: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;chrome://flags/&lt;br&gt;光栅线程数设定为1&lt;/li&gt;
&lt;li&gt;chrome://flags/&lt;br&gt;关闭ignore-gpu-blacklist 和 enable-one-copy&lt;/l
    
    </summary>
    
      <category term="渣技术" scheme="https://blog.dangge.moe/categories/%E6%B8%A3%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>搞了个hexo博客但是因为文章转换起来太麻烦所以懒得动了</title>
    <link href="https://blog.dangge.moe/2015/09/12/index.html"/>
    <id>https://blog.dangge.moe/2015/09/12/index.html</id>
    <published>2015-09-12T07:58:00.000Z</published>
    <updated>2016-05-07T03:44:17.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://dangger.github.io" target="_blank" rel="external">http://dangger.github.io</a></p>
<p>等我闲了慢慢研究怎么转换文章吧…</p>
<p>2016年1月17日 update:</p>
<p>过几天换hexo辣</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://dangger.github.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://dangger.github.io&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;等我闲了慢慢研究怎么转换文章吧…&lt;/p&gt;
&lt;p&gt;2016年1月17日 
    
    </summary>
    
      <category term="碎碎念" scheme="https://blog.dangge.moe/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
      <category term="dangge" scheme="https://blog.dangge.moe/tags/dangge/"/>
    
  </entry>
  
  <entry>
    <title>Typcho默认gravatar头像被墙问题</title>
    <link href="https://blog.dangge.moe/2015/08/27/index.html"/>
    <id>https://blog.dangge.moe/2015/08/27/index.html</id>
    <published>2015-08-27T08:35:00.000Z</published>
    <updated>2016-05-07T03:43:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>解决方法也很简单，编辑\var\Typecho路径里的Common.php行，939行</p>
<p>将默认的gravatar地址更换为<a href="https://secure.gravatar.com即可。" target="_blank" rel="external">https://secure.gravatar.com即可。</a></p>
<p>也可以替换为V2EX或多说的反代地址，具体使用方法请自己探索。</p>
<ul>
<li>多说的源：<a href="http://gravatar.duoshuo.com" target="_blank" rel="external">http://gravatar.duoshuo.com</a> </li>
<li>V2EX的源：<a href="http://cdn.v2ex.com/gravatar" target="_blank" rel="external">http://cdn.v2ex.com/gravatar</a> （支持SSL）</li>
</ul>
<p>个人感觉还是官方的gravatar比较稳定。</p>
<p>2015年8月30日update:<br>于是在改了半天comment的CSS后我终于认识到了自己并没有前端审美能力，怒切disqus了。<br>历史评论已经导出成json了，于是disqus要的xml究竟是什么鬼啦摔<br>而且发现了disqus用的fastly家的CDN，很多地方都墙了这家CDN啊…<br>算了，反正来看blog的大概都有科学上网能力。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;解决方法也很简单，编辑\var\Typecho路径里的Common.php行，939行&lt;/p&gt;
&lt;p&gt;将默认的gravatar地址更换为&lt;a href=&quot;https://secure.gravatar.com即可。&quot; target=&quot;_blank&quot; rel=&quot;externa
    
    </summary>
    
      <category term="渣技术" scheme="https://blog.dangge.moe/categories/%E6%B8%A3%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="dangge" scheme="https://blog.dangge.moe/tags/dangge/"/>
    
  </entry>
  
  <entry>
    <title>Windows下使用git的一些坑点</title>
    <link href="https://blog.dangge.moe/2015/08/27/index.html"/>
    <id>https://blog.dangge.moe/2015/08/27/index.html</id>
    <published>2015-08-26T20:27:00.000Z</published>
    <updated>2016-05-07T03:42:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>RT，众所周知Windows对git的支持简直没法和别的系统比，不过<del>又不是不能用</del><br>于是写点坑点好了。</p>
<ul>
<li>SSH问题<br>我使用了github的windows版本，然后打开是有一个git bash窗口的，我们可以看出这个东西其实是基于MINGW64的。<br>然后我们要在Github里添加公钥，就要在bash窗口里输入<code>ssh-keygen -t rsa -C “your@mail.com”</code><br>然后enter三次，就自动生成好了。<br>那么问题来了:我们要向github里添加公钥，可是这个生成的公钥在哪里？<br>通过everything，我们找到了它的路径:<code>C:\Users\（替换为当前系统用户名）\.ssh</code><br>打开会发现两个文件，一个是id_rsa.pub，这个是你的公钥。<br>还有一个id_rsa，就是本地留存的私钥了。<br>用任意文本编辑器打开id_rsa.pub,复制内容，粘贴进github的SSH添加处，就添加好了。<br>然后我们的git Bash窗口就能连接上github了。</li>
<li>clone默认路径问题<br>在clone远程仓库的时候，windows下的git默认是clone到当前路径。<br>如果你不做修改，每次就要手动cd到工作文件夹去，很烦。<br>要修改默认路径也很简单，打开高级系统设置，环境变量，在上方的用户变量里新建一个值home，属性就是你要改的默认路径。<br>如图所示。<img src="https://i.imgur.com/4jgGure.jpg" alt="用户变量设置"><br>保存后再次打开Git Bash，ls一下，就会发现默认目录已经发生了改变。<br>–未完待续</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;RT，众所周知Windows对git的支持简直没法和别的系统比，不过&lt;del&gt;又不是不能用&lt;/del&gt;&lt;br&gt;于是写点坑点好了。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SSH问题&lt;br&gt;我使用了github的windows版本，然后打开是有一个git bash窗口的，我们可以看出这个东
    
    </summary>
    
      <category term="渣技术" scheme="https://blog.dangge.moe/categories/%E6%B8%A3%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="dangge" scheme="https://blog.dangge.moe/tags/dangge/"/>
    
  </entry>
  
  <entry>
    <title>Python学习笔记</title>
    <link href="https://blog.dangge.moe/2015/07/31/index.html"/>
    <id>https://blog.dangge.moe/2015/07/31/index.html</id>
    <published>2015-07-31T09:11:00.000Z</published>
    <updated>2016-05-07T03:43:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>给自己看的。<br>1.编码大坑<br>在Python里，我们需要指定一下编码，否则输出中文的时候会乱码<del>所以说还是全英文好</del><br>根据情况，我们选择在代码头部添加</p>
<pre><code># coding=编码名
</code></pre><p>exp:</p>
<pre><code># coding=utf-8 
</code></pre><p>这个对中文无效</p>
<pre><code># coding=gbk
</code></pre><p>这个中文可用</p>
<p>未完待续</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;给自己看的。&lt;br&gt;1.编码大坑&lt;br&gt;在Python里，我们需要指定一下编码，否则输出中文的时候会乱码&lt;del&gt;所以说还是全英文好&lt;/del&gt;&lt;br&gt;根据情况，我们选择在代码头部添加&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# coding=编码名
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;
    
    </summary>
    
      <category term="渣技术" scheme="https://blog.dangge.moe/categories/%E6%B8%A3%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="dangge" scheme="https://blog.dangge.moe/tags/dangge/"/>
    
  </entry>
  
</feed>
